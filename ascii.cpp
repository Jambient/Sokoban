#include <iostream>
#include <vector>
#include "ascii.h"
#include "main.h"
#include "ansi.h"

std::string asciiNumbers[10][6] = {
    {
        " _____ ",
        "|  _  |",
        "| |/' |",
        "|  /| |",
        "\\ |_/ /",
        " \\___/ "
    },
    {
        " __  ",
        "/  | ",
        "`| | ",
        " | | ",
        "_| |_",
        "\\___/"
    },
    {
        " _____ ",
        "/ __  \\",
        "`' / /'",
        "  / /  ",
        "./ /___",
        "\\_____/"
    },
    {
        " _____ ",
        "|____ |",
        "    / /",
        "    \\ \\",
        ".___/ /",
        "\\____/ "
    },
    {
        "   ___ ",
        "  /   |",
        " / /| |",
        "/ /_| |",
        "\\___  |",
        "    |_/"
    },
    {
        " _____ ",
        "|  ___|",
        "|___ \\ ",
        "    \\ \\",
        "/\\__/ /",
        "\\____/ "
    },
    {
        "  ____ ",
        " / ___|",
        "/ /___ ",
        "| ___ \\",
        "| \\_/ |",
        "\\_____/"
    },
    {
        " ______",
        "|___  /",
        "   / / ",
        "  / /  ",
        "./ /   ",
        "\\_/    "
    },
    {
        " _____ ",
        "|  _  |",
        " \\ V / ",
        " / _ \\ ",
        "| |_| |",
        "\\_____/"
    },
    {
        " _____ ",
        "|  _  |",
        "| |_| |",
        "\\____ |",
        ".___/ /",
        "\\____/ "
    }
};

void showStartScreen() {
    std::cout << ".----------------.  .----------------.  .----------------.  .----------------.  .----------------.  .----------------.  .-----------------." << std::endl
        << "| .--------------. || .--------------. || .--------------. || .--------------. || .--------------. || .--------------. || .--------------. |" << std::endl
        << "| |    _______   | || |     ____     | || |  ___  ____   | || |     ____     | || |   ______     | || |      __      | || | ____  _____  | |" << std::endl
        << "| |   /  ___  |  | || |   .'    `.   | || | |_  ||_  _|  | || |   .'    `.   | || |  |_   _ \\    | || |     /  \\     | || ||_   \\ |_  _| | |" << std::endl
        << "| |  |  (__ \\_|  | || |  /  .--.  \\  | || |   | |_/ /    | || |  /  .--.  \\  | || |    | |_) |   | || |    / /\\ \\    | || |  |   \\ | |   | |" << std::endl
        << "| |   '.___`-.   | || |  | |    | |  | || |   |  __'.    | || |  | |    | |  | || |    |  __'.   | || |   / ____ \\   | || |  | |\\ \\| |   | |" << std::endl
        << "| |  |`\\____) |  | || |  \\  `--'  /  | || |  _| |  \\ \\_  | || |  \\  `--'  /  | || |   _| |__) |  | || | _/ /    \\ \\_ | || | _| |_\\   |_  | |" << std::endl
        << "| |  |_______.'  | || |   `.____.'   | || | |____||____| | || |   `.____.'   | || |  |_______/   | || ||____|  |____|| || ||_____|\\____| | |" << std::endl
        << "| |              | || |              | || |              | || |              | || |              | || |              | || |              | |" << std::endl
        << "| '--------------' || '--------------' || '--------------' || '--------------' || '--------------' || '--------------' || '--------------' |" << std::endl
        << " '----------------'  '----------------'  '----------------'  '----------------'  '----------------'  '----------------'  '----------------'" << std::endl << std::endl
        << "                                                         Press enter to continue...";

    std::cin.ignore();
}

int printNumber(int num, Vector2 position) {
    for (int i = 0; i < 6; i++) {
        std::string line = asciiNumbers[num][i];
        std::cout << moveCursorToPosition({ position.x, position.y + i });
        std::cout << line;
    }
    return asciiNumbers[num][0].size();
}

std::string* numberToAscii(int num) {
    static std::string ascii[6];
    std::string numStr = std::to_string(num);
    int longestLine = 0;

    if (numStr.length() < 2) {
        numStr.insert(numStr.begin(), '0');
    }

    for (int i = 0; i < 6; i++) {
        ascii[i] = asciiNumbers[numStr[0] - '0'][i] + ' ' + asciiNumbers[numStr[1] - '0'][i];
    }

    return ascii;
}

std::vector<std::string> levelCompleteUI = {
    "*----------------------------------------------------*",
        "| ______ _____ _   _ _____ _____ _   _  ___________  |",
        "| |  ___|_   _| \\ | |_   _/  ___| | | ||  ___|  _  \\ |",
        "| | |_    | | |  \\| | | | \\ `--.| |_| || |__ | | | | |",
        "| |  _|   | | | . ` | | |  `--. \\  _  ||  __|| | | | |",
        "| | |    _| |_| |\\  |_| |_/\\__/ / | | || |___| |/ /  |",
        "| \\_|    \\___/\\_| \\_/\\___/\\____/\\_| |_/\\____/|___/   |",
        "|                                                    |",
        "*----------------------------------------------------*"
};